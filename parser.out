Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> formula
Rule 1     formula -> ATOM
Rule 2     formula -> NOT formula
Rule 3     formula -> formula AND formula
Rule 4     formula -> formula OR formula
Rule 5     formula -> formula IMPLIES formula
Rule 6     formula -> NEXT formula
Rule 7     formula -> ALWAYS formula
Rule 8     formula -> EVENTUALLY formula
Rule 9     formula -> formula UNTIL formula
Rule 10    formula -> LPAREN formula RPAREN

Terminals, with rules where they appear

ALWAYS               : 7
AND                  : 3
ATOM                 : 1
EVENTUALLY           : 8
IMPLIES              : 5
LPAREN               : 10
NEXT                 : 6
NOT                  : 2
OR                   : 4
RPAREN               : 10
UNTIL                : 9
error                : 

Nonterminals, with rules where they appear

formula              : 2 3 3 4 4 5 5 6 7 8 9 9 10 0

Parsing method: LALR

state 0

    (0) S' -> . formula
    (1) formula -> . ATOM
    (2) formula -> . NOT formula
    (3) formula -> . formula AND formula
    (4) formula -> . formula OR formula
    (5) formula -> . formula IMPLIES formula
    (6) formula -> . NEXT formula
    (7) formula -> . ALWAYS formula
    (8) formula -> . EVENTUALLY formula
    (9) formula -> . formula UNTIL formula
    (10) formula -> . LPAREN formula RPAREN

    ATOM            shift and go to state 2
    NOT             shift and go to state 3
    NEXT            shift and go to state 4
    ALWAYS          shift and go to state 5
    EVENTUALLY      shift and go to state 6
    LPAREN          shift and go to state 7

    formula                        shift and go to state 1

state 1

    (0) S' -> formula .
    (3) formula -> formula . AND formula
    (4) formula -> formula . OR formula
    (5) formula -> formula . IMPLIES formula
    (9) formula -> formula . UNTIL formula

    AND             shift and go to state 8
    OR              shift and go to state 9
    IMPLIES         shift and go to state 10
    UNTIL           shift and go to state 11


state 2

    (1) formula -> ATOM .

    AND             reduce using rule 1 (formula -> ATOM .)
    OR              reduce using rule 1 (formula -> ATOM .)
    IMPLIES         reduce using rule 1 (formula -> ATOM .)
    UNTIL           reduce using rule 1 (formula -> ATOM .)
    $end            reduce using rule 1 (formula -> ATOM .)
    RPAREN          reduce using rule 1 (formula -> ATOM .)


state 3

    (2) formula -> NOT . formula
    (1) formula -> . ATOM
    (2) formula -> . NOT formula
    (3) formula -> . formula AND formula
    (4) formula -> . formula OR formula
    (5) formula -> . formula IMPLIES formula
    (6) formula -> . NEXT formula
    (7) formula -> . ALWAYS formula
    (8) formula -> . EVENTUALLY formula
    (9) formula -> . formula UNTIL formula
    (10) formula -> . LPAREN formula RPAREN

    ATOM            shift and go to state 2
    NOT             shift and go to state 3
    NEXT            shift and go to state 4
    ALWAYS          shift and go to state 5
    EVENTUALLY      shift and go to state 6
    LPAREN          shift and go to state 7

    formula                        shift and go to state 12

state 4

    (6) formula -> NEXT . formula
    (1) formula -> . ATOM
    (2) formula -> . NOT formula
    (3) formula -> . formula AND formula
    (4) formula -> . formula OR formula
    (5) formula -> . formula IMPLIES formula
    (6) formula -> . NEXT formula
    (7) formula -> . ALWAYS formula
    (8) formula -> . EVENTUALLY formula
    (9) formula -> . formula UNTIL formula
    (10) formula -> . LPAREN formula RPAREN

    ATOM            shift and go to state 2
    NOT             shift and go to state 3
    NEXT            shift and go to state 4
    ALWAYS          shift and go to state 5
    EVENTUALLY      shift and go to state 6
    LPAREN          shift and go to state 7

    formula                        shift and go to state 13

state 5

    (7) formula -> ALWAYS . formula
    (1) formula -> . ATOM
    (2) formula -> . NOT formula
    (3) formula -> . formula AND formula
    (4) formula -> . formula OR formula
    (5) formula -> . formula IMPLIES formula
    (6) formula -> . NEXT formula
    (7) formula -> . ALWAYS formula
    (8) formula -> . EVENTUALLY formula
    (9) formula -> . formula UNTIL formula
    (10) formula -> . LPAREN formula RPAREN

    ATOM            shift and go to state 2
    NOT             shift and go to state 3
    NEXT            shift and go to state 4
    ALWAYS          shift and go to state 5
    EVENTUALLY      shift and go to state 6
    LPAREN          shift and go to state 7

    formula                        shift and go to state 14

state 6

    (8) formula -> EVENTUALLY . formula
    (1) formula -> . ATOM
    (2) formula -> . NOT formula
    (3) formula -> . formula AND formula
    (4) formula -> . formula OR formula
    (5) formula -> . formula IMPLIES formula
    (6) formula -> . NEXT formula
    (7) formula -> . ALWAYS formula
    (8) formula -> . EVENTUALLY formula
    (9) formula -> . formula UNTIL formula
    (10) formula -> . LPAREN formula RPAREN

    ATOM            shift and go to state 2
    NOT             shift and go to state 3
    NEXT            shift and go to state 4
    ALWAYS          shift and go to state 5
    EVENTUALLY      shift and go to state 6
    LPAREN          shift and go to state 7

    formula                        shift and go to state 15

state 7

    (10) formula -> LPAREN . formula RPAREN
    (1) formula -> . ATOM
    (2) formula -> . NOT formula
    (3) formula -> . formula AND formula
    (4) formula -> . formula OR formula
    (5) formula -> . formula IMPLIES formula
    (6) formula -> . NEXT formula
    (7) formula -> . ALWAYS formula
    (8) formula -> . EVENTUALLY formula
    (9) formula -> . formula UNTIL formula
    (10) formula -> . LPAREN formula RPAREN

    ATOM            shift and go to state 2
    NOT             shift and go to state 3
    NEXT            shift and go to state 4
    ALWAYS          shift and go to state 5
    EVENTUALLY      shift and go to state 6
    LPAREN          shift and go to state 7

    formula                        shift and go to state 16

state 8

    (3) formula -> formula AND . formula
    (1) formula -> . ATOM
    (2) formula -> . NOT formula
    (3) formula -> . formula AND formula
    (4) formula -> . formula OR formula
    (5) formula -> . formula IMPLIES formula
    (6) formula -> . NEXT formula
    (7) formula -> . ALWAYS formula
    (8) formula -> . EVENTUALLY formula
    (9) formula -> . formula UNTIL formula
    (10) formula -> . LPAREN formula RPAREN

    ATOM            shift and go to state 2
    NOT             shift and go to state 3
    NEXT            shift and go to state 4
    ALWAYS          shift and go to state 5
    EVENTUALLY      shift and go to state 6
    LPAREN          shift and go to state 7

    formula                        shift and go to state 17

state 9

    (4) formula -> formula OR . formula
    (1) formula -> . ATOM
    (2) formula -> . NOT formula
    (3) formula -> . formula AND formula
    (4) formula -> . formula OR formula
    (5) formula -> . formula IMPLIES formula
    (6) formula -> . NEXT formula
    (7) formula -> . ALWAYS formula
    (8) formula -> . EVENTUALLY formula
    (9) formula -> . formula UNTIL formula
    (10) formula -> . LPAREN formula RPAREN

    ATOM            shift and go to state 2
    NOT             shift and go to state 3
    NEXT            shift and go to state 4
    ALWAYS          shift and go to state 5
    EVENTUALLY      shift and go to state 6
    LPAREN          shift and go to state 7

    formula                        shift and go to state 18

state 10

    (5) formula -> formula IMPLIES . formula
    (1) formula -> . ATOM
    (2) formula -> . NOT formula
    (3) formula -> . formula AND formula
    (4) formula -> . formula OR formula
    (5) formula -> . formula IMPLIES formula
    (6) formula -> . NEXT formula
    (7) formula -> . ALWAYS formula
    (8) formula -> . EVENTUALLY formula
    (9) formula -> . formula UNTIL formula
    (10) formula -> . LPAREN formula RPAREN

    ATOM            shift and go to state 2
    NOT             shift and go to state 3
    NEXT            shift and go to state 4
    ALWAYS          shift and go to state 5
    EVENTUALLY      shift and go to state 6
    LPAREN          shift and go to state 7

    formula                        shift and go to state 19

state 11

    (9) formula -> formula UNTIL . formula
    (1) formula -> . ATOM
    (2) formula -> . NOT formula
    (3) formula -> . formula AND formula
    (4) formula -> . formula OR formula
    (5) formula -> . formula IMPLIES formula
    (6) formula -> . NEXT formula
    (7) formula -> . ALWAYS formula
    (8) formula -> . EVENTUALLY formula
    (9) formula -> . formula UNTIL formula
    (10) formula -> . LPAREN formula RPAREN

    ATOM            shift and go to state 2
    NOT             shift and go to state 3
    NEXT            shift and go to state 4
    ALWAYS          shift and go to state 5
    EVENTUALLY      shift and go to state 6
    LPAREN          shift and go to state 7

    formula                        shift and go to state 20

state 12

    (2) formula -> NOT formula .
    (3) formula -> formula . AND formula
    (4) formula -> formula . OR formula
    (5) formula -> formula . IMPLIES formula
    (9) formula -> formula . UNTIL formula

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for IMPLIES resolved as shift
  ! shift/reduce conflict for UNTIL resolved as shift
    $end            reduce using rule 2 (formula -> NOT formula .)
    RPAREN          reduce using rule 2 (formula -> NOT formula .)
    AND             shift and go to state 8
    OR              shift and go to state 9
    IMPLIES         shift and go to state 10
    UNTIL           shift and go to state 11

  ! AND             [ reduce using rule 2 (formula -> NOT formula .) ]
  ! OR              [ reduce using rule 2 (formula -> NOT formula .) ]
  ! IMPLIES         [ reduce using rule 2 (formula -> NOT formula .) ]
  ! UNTIL           [ reduce using rule 2 (formula -> NOT formula .) ]


state 13

    (6) formula -> NEXT formula .
    (3) formula -> formula . AND formula
    (4) formula -> formula . OR formula
    (5) formula -> formula . IMPLIES formula
    (9) formula -> formula . UNTIL formula

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for IMPLIES resolved as shift
  ! shift/reduce conflict for UNTIL resolved as shift
    $end            reduce using rule 6 (formula -> NEXT formula .)
    RPAREN          reduce using rule 6 (formula -> NEXT formula .)
    AND             shift and go to state 8
    OR              shift and go to state 9
    IMPLIES         shift and go to state 10
    UNTIL           shift and go to state 11

  ! AND             [ reduce using rule 6 (formula -> NEXT formula .) ]
  ! OR              [ reduce using rule 6 (formula -> NEXT formula .) ]
  ! IMPLIES         [ reduce using rule 6 (formula -> NEXT formula .) ]
  ! UNTIL           [ reduce using rule 6 (formula -> NEXT formula .) ]


state 14

    (7) formula -> ALWAYS formula .
    (3) formula -> formula . AND formula
    (4) formula -> formula . OR formula
    (5) formula -> formula . IMPLIES formula
    (9) formula -> formula . UNTIL formula

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for IMPLIES resolved as shift
  ! shift/reduce conflict for UNTIL resolved as shift
    $end            reduce using rule 7 (formula -> ALWAYS formula .)
    RPAREN          reduce using rule 7 (formula -> ALWAYS formula .)
    AND             shift and go to state 8
    OR              shift and go to state 9
    IMPLIES         shift and go to state 10
    UNTIL           shift and go to state 11

  ! AND             [ reduce using rule 7 (formula -> ALWAYS formula .) ]
  ! OR              [ reduce using rule 7 (formula -> ALWAYS formula .) ]
  ! IMPLIES         [ reduce using rule 7 (formula -> ALWAYS formula .) ]
  ! UNTIL           [ reduce using rule 7 (formula -> ALWAYS formula .) ]


state 15

    (8) formula -> EVENTUALLY formula .
    (3) formula -> formula . AND formula
    (4) formula -> formula . OR formula
    (5) formula -> formula . IMPLIES formula
    (9) formula -> formula . UNTIL formula

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for IMPLIES resolved as shift
  ! shift/reduce conflict for UNTIL resolved as shift
    $end            reduce using rule 8 (formula -> EVENTUALLY formula .)
    RPAREN          reduce using rule 8 (formula -> EVENTUALLY formula .)
    AND             shift and go to state 8
    OR              shift and go to state 9
    IMPLIES         shift and go to state 10
    UNTIL           shift and go to state 11

  ! AND             [ reduce using rule 8 (formula -> EVENTUALLY formula .) ]
  ! OR              [ reduce using rule 8 (formula -> EVENTUALLY formula .) ]
  ! IMPLIES         [ reduce using rule 8 (formula -> EVENTUALLY formula .) ]
  ! UNTIL           [ reduce using rule 8 (formula -> EVENTUALLY formula .) ]


state 16

    (10) formula -> LPAREN formula . RPAREN
    (3) formula -> formula . AND formula
    (4) formula -> formula . OR formula
    (5) formula -> formula . IMPLIES formula
    (9) formula -> formula . UNTIL formula

    RPAREN          shift and go to state 21
    AND             shift and go to state 8
    OR              shift and go to state 9
    IMPLIES         shift and go to state 10
    UNTIL           shift and go to state 11


state 17

    (3) formula -> formula AND formula .
    (3) formula -> formula . AND formula
    (4) formula -> formula . OR formula
    (5) formula -> formula . IMPLIES formula
    (9) formula -> formula . UNTIL formula

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for IMPLIES resolved as shift
  ! shift/reduce conflict for UNTIL resolved as shift
    $end            reduce using rule 3 (formula -> formula AND formula .)
    RPAREN          reduce using rule 3 (formula -> formula AND formula .)
    AND             shift and go to state 8
    OR              shift and go to state 9
    IMPLIES         shift and go to state 10
    UNTIL           shift and go to state 11

  ! AND             [ reduce using rule 3 (formula -> formula AND formula .) ]
  ! OR              [ reduce using rule 3 (formula -> formula AND formula .) ]
  ! IMPLIES         [ reduce using rule 3 (formula -> formula AND formula .) ]
  ! UNTIL           [ reduce using rule 3 (formula -> formula AND formula .) ]


state 18

    (4) formula -> formula OR formula .
    (3) formula -> formula . AND formula
    (4) formula -> formula . OR formula
    (5) formula -> formula . IMPLIES formula
    (9) formula -> formula . UNTIL formula

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for IMPLIES resolved as shift
  ! shift/reduce conflict for UNTIL resolved as shift
    $end            reduce using rule 4 (formula -> formula OR formula .)
    RPAREN          reduce using rule 4 (formula -> formula OR formula .)
    AND             shift and go to state 8
    OR              shift and go to state 9
    IMPLIES         shift and go to state 10
    UNTIL           shift and go to state 11

  ! AND             [ reduce using rule 4 (formula -> formula OR formula .) ]
  ! OR              [ reduce using rule 4 (formula -> formula OR formula .) ]
  ! IMPLIES         [ reduce using rule 4 (formula -> formula OR formula .) ]
  ! UNTIL           [ reduce using rule 4 (formula -> formula OR formula .) ]


state 19

    (5) formula -> formula IMPLIES formula .
    (3) formula -> formula . AND formula
    (4) formula -> formula . OR formula
    (5) formula -> formula . IMPLIES formula
    (9) formula -> formula . UNTIL formula

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for IMPLIES resolved as shift
  ! shift/reduce conflict for UNTIL resolved as shift
    $end            reduce using rule 5 (formula -> formula IMPLIES formula .)
    RPAREN          reduce using rule 5 (formula -> formula IMPLIES formula .)
    AND             shift and go to state 8
    OR              shift and go to state 9
    IMPLIES         shift and go to state 10
    UNTIL           shift and go to state 11

  ! AND             [ reduce using rule 5 (formula -> formula IMPLIES formula .) ]
  ! OR              [ reduce using rule 5 (formula -> formula IMPLIES formula .) ]
  ! IMPLIES         [ reduce using rule 5 (formula -> formula IMPLIES formula .) ]
  ! UNTIL           [ reduce using rule 5 (formula -> formula IMPLIES formula .) ]


state 20

    (9) formula -> formula UNTIL formula .
    (3) formula -> formula . AND formula
    (4) formula -> formula . OR formula
    (5) formula -> formula . IMPLIES formula
    (9) formula -> formula . UNTIL formula

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for IMPLIES resolved as shift
  ! shift/reduce conflict for UNTIL resolved as shift
    $end            reduce using rule 9 (formula -> formula UNTIL formula .)
    RPAREN          reduce using rule 9 (formula -> formula UNTIL formula .)
    AND             shift and go to state 8
    OR              shift and go to state 9
    IMPLIES         shift and go to state 10
    UNTIL           shift and go to state 11

  ! AND             [ reduce using rule 9 (formula -> formula UNTIL formula .) ]
  ! OR              [ reduce using rule 9 (formula -> formula UNTIL formula .) ]
  ! IMPLIES         [ reduce using rule 9 (formula -> formula UNTIL formula .) ]
  ! UNTIL           [ reduce using rule 9 (formula -> formula UNTIL formula .) ]


state 21

    (10) formula -> LPAREN formula RPAREN .

    AND             reduce using rule 10 (formula -> LPAREN formula RPAREN .)
    OR              reduce using rule 10 (formula -> LPAREN formula RPAREN .)
    IMPLIES         reduce using rule 10 (formula -> LPAREN formula RPAREN .)
    UNTIL           reduce using rule 10 (formula -> LPAREN formula RPAREN .)
    $end            reduce using rule 10 (formula -> LPAREN formula RPAREN .)
    RPAREN          reduce using rule 10 (formula -> LPAREN formula RPAREN .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for AND in state 12 resolved as shift
WARNING: shift/reduce conflict for OR in state 12 resolved as shift
WARNING: shift/reduce conflict for IMPLIES in state 12 resolved as shift
WARNING: shift/reduce conflict for UNTIL in state 12 resolved as shift
WARNING: shift/reduce conflict for AND in state 13 resolved as shift
WARNING: shift/reduce conflict for OR in state 13 resolved as shift
WARNING: shift/reduce conflict for IMPLIES in state 13 resolved as shift
WARNING: shift/reduce conflict for UNTIL in state 13 resolved as shift
WARNING: shift/reduce conflict for AND in state 14 resolved as shift
WARNING: shift/reduce conflict for OR in state 14 resolved as shift
WARNING: shift/reduce conflict for IMPLIES in state 14 resolved as shift
WARNING: shift/reduce conflict for UNTIL in state 14 resolved as shift
WARNING: shift/reduce conflict for AND in state 15 resolved as shift
WARNING: shift/reduce conflict for OR in state 15 resolved as shift
WARNING: shift/reduce conflict for IMPLIES in state 15 resolved as shift
WARNING: shift/reduce conflict for UNTIL in state 15 resolved as shift
WARNING: shift/reduce conflict for AND in state 17 resolved as shift
WARNING: shift/reduce conflict for OR in state 17 resolved as shift
WARNING: shift/reduce conflict for IMPLIES in state 17 resolved as shift
WARNING: shift/reduce conflict for UNTIL in state 17 resolved as shift
WARNING: shift/reduce conflict for AND in state 18 resolved as shift
WARNING: shift/reduce conflict for OR in state 18 resolved as shift
WARNING: shift/reduce conflict for IMPLIES in state 18 resolved as shift
WARNING: shift/reduce conflict for UNTIL in state 18 resolved as shift
WARNING: shift/reduce conflict for AND in state 19 resolved as shift
WARNING: shift/reduce conflict for OR in state 19 resolved as shift
WARNING: shift/reduce conflict for IMPLIES in state 19 resolved as shift
WARNING: shift/reduce conflict for UNTIL in state 19 resolved as shift
WARNING: shift/reduce conflict for AND in state 20 resolved as shift
WARNING: shift/reduce conflict for OR in state 20 resolved as shift
WARNING: shift/reduce conflict for IMPLIES in state 20 resolved as shift
WARNING: shift/reduce conflict for UNTIL in state 20 resolved as shift
